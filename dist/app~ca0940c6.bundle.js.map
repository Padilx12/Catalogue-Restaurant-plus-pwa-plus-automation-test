{"version":3,"file":"app~ca0940c6.bundle.js","mappings":";mZACA,knGAAAA,GAAA,wBAAAA,EAAA,sBAAAA,GAAA,iBAAAA,GAAA,ssDAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,4bAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,yhBAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,qGAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,uZAAAA,EAAA,EAAAA,EAAA,SAAAA,IAAA,SAAAA,GAAA,+GAwCA,QArCS,WACP,cAEG,IADDC,EAAM,EAANA,OAAQC,EAAS,EAATA,UAAWC,EAAM,EAANA,OAAQC,EAAO,EAAPA,SAL/B,4FAKsC,SAElCC,KAAKC,QAAUL,EACfI,KAAKE,WAAaL,EAClBG,KAAKG,QAAUL,EACfE,KAAKI,SAAWL,EAEhBC,KAAKK,kBACP,CAbF,UAqBG,EAgBA,OArCH,EAaG,EAbH,EAaG,+BAED,WACEC,EAAAA,EAAAA,KAAqB,CACnBV,OAAQI,KAAKC,QACbH,OAAQE,KAAKG,QACbJ,QAASC,KAAKI,UAElB,GAAC,yBArBH,EAqBG,UAED,sFAE0B,OADlBG,EAAMC,EAAAA,EAAAA,6BACNC,EAAOC,EAAAA,EAAOH,GAAI,SACQE,EAAKE,SAAQ,OAAtB,OAAvBX,KAAKI,SAASQ,UAAY,EAAH,cACjBH,EAAKI,cAAa,OAKHC,SAASC,cAAc,iBAC/BC,iBAAiB,SAAS,SAACC,GACtCA,EAAMC,iBACNJ,SAASC,cAAc,gBAAgBI,OACzC,IAAG,+CAfJ,EArBH,8KAqCG,8CArCH,uEAqCG,EAlCM,sUCHT,knGAAAxB,GAAA,wBAAAA,EAAA,sBAAAA,GAAA,iBAAAA,GAAA,ssDAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,4bAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,yhBAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,qGAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,kkBAmCA,QA9Be,CACPgB,OAAM,WAAG,0RAKf,EAEME,YAAW,WAAG,yGAEmC,OAA/CN,EAAMC,EAAAA,EAAAA,gCAAyC,SAC5BY,EAAAA,EAAAA,iBAAkCb,EAAIc,IAAG,OAA5DC,EAAa,EAAH,KACYR,SAASC,cAAc,eAC/BH,WAAYW,EAAAA,EAAAA,IAA+BD,GAE/DE,EAAAA,EAAAA,KAAyB,CACvBC,oBAAqBX,SAASC,cAAc,wBAC5CW,mBAAoBC,EAAAA,EACpBL,WAAY,CACVD,GAAIC,EAAWA,WAAWD,GAC1BO,KAAMN,EAAWA,WAAWM,KAC5BC,KAAMP,EAAWA,WAAWO,KAC5BC,UAAWR,EAAWA,WAAWQ,UACjCC,OAAQT,EAAWA,WAAWS,OAC9BC,YAAaV,EAAWA,WAAWU,eAEpC,0CAlBe,EAmBpB,6TChCF,svNAKA,IAAMC,EAAO,IAAIC,EAAAA,EAajB,QAXiB,CACTvB,OAAM,WAAG,0HACNsB,EAAKE,eAAa,0CADZ,EAEf,EAEMtB,YAAW,WAAG,iGAClB,IAAIuB,EAAAA,EAAgC,CAAEH,KAAAA,EAAMP,mBAAoBC,EAAAA,IAChE,IAAIU,EAAAA,EAAkC,CAAEJ,KAAAA,EAAMP,mBAAoBC,EAAAA,IAAyB,0CAFzE,EAGpB","sources":["webpack://restaurant-apps/./src/scripts/views/app.js","webpack://restaurant-apps/./src/scripts/views/pages/detail.js","webpack://restaurant-apps/./src/scripts/views/pages/favorites.js"],"sourcesContent":["import routes from '../routes/routes';\nimport DrawerInitiator from '../utils/drawer-initiator';\nimport UrlParser from '../routes/url-parser';\n\nclass App {\n  constructor({\n    button, closeMenu, drawer, content,\n  }) {\n    this._button = button;\n    this._closeMenu = closeMenu;\n    this._drawer = drawer;\n    this._content = content;\n\n    this._initialAppShell();\n  }\n\n  _initialAppShell() {\n    DrawerInitiator.init({\n      button: this._button,\n      drawer: this._drawer,\n      content: this._content,\n    });\n  }\n\n  async renderPage() {\n    const url = UrlParser.parseActiveUrlWithCombiner();\n    const page = routes[url];\n    this._content.innerHTML = await page.render();\n    await page.afterRender();\n\n    /*\n    * function skip-content @dicoding\n    */\n    const skipLinkElem = document.querySelector('.skip-content');\n    skipLinkElem.addEventListener('click', (event) => {\n      event.preventDefault();\n      document.querySelector('#mainContent').focus();\n    });\n  }\n}\n\nexport default App;\n","import UrlParser from '../../routes/url-parser';\nimport RestaurantSource from '../../data/restaurantdb-source';\nimport { createRestaurantDetailTemplate } from '../templates/template-creator';\nimport LikeButtonPresenter from '../../utils/like-button-presenter';\nimport FavoriteRestaurantIdb from '../../data/favorite-restaurant-idb';\n\nconst Detail = {\n  async render() {\n    return `\n        <div id=\"restaurant\" class=\"restaurant\"></div>\n        <div id=\"likeButtonContainer\"></div>\n        `;\n  },\n\n  async afterRender() {\n    // Fungsi ini akan dipanggil setelah render()\n    const url = UrlParser.parseActiveUrlWithoutCombiner();\n    const restaurant = await RestaurantSource.restaurantDetail(url.id);\n    const restaurantContainer = document.querySelector('.restaurant');\n    restaurantContainer.innerHTML = createRestaurantDetailTemplate(restaurant);\n\n    LikeButtonPresenter.init({\n      likeButtonContainer: document.querySelector('#likeButtonContainer'),\n      favoriteRestaurant: FavoriteRestaurantIdb,\n      restaurant: {\n        id: restaurant.restaurant.id,\n        name: restaurant.restaurant.name,\n        city: restaurant.restaurant.city,\n        pictureId: restaurant.restaurant.pictureId,\n        rating: restaurant.restaurant.rating,\n        description: restaurant.restaurant.description,\n      },\n    });\n  },\n};\n\nexport default Detail;\n","import FavoriteRestaurantIdb from '../../data/favorite-restaurant-idb';\n// import { createRestaurantItemTemplate } from '../templates/template-creator';\nimport FavoriteRestaurantSearchView from './liked-restaurant/favorite-restaurant-search-view';\nimport FavoriteRestaurantShowPresenter from './liked-restaurant/favorite-restaurant-show-presenter';\nimport FavoriteRestaurantSearchPresenter from './liked-restaurant/favorite-restaurant-search-presenter';\n\nconst view = new FavoriteRestaurantSearchView();\n\nconst Favorite = {\n  async render() {\n    return view.getTemplate();\n  },\n\n  async afterRender() {\n    new FavoriteRestaurantShowPresenter({ view, favoriteRestaurant: FavoriteRestaurantIdb });\n    new FavoriteRestaurantSearchPresenter({ view, favoriteRestaurant: FavoriteRestaurantIdb });\n  },\n};\n\nexport default Favorite;\n\n\n// import FavoriteRestaurantIdb from '../../data/favorite-restaurant-idb';\n// import { createRestaurantItemTemplate } from '../templates/template-creator';\n\n// const Favorites = {\n//   async render() {\n//     return `\n//     <main id=\"mainContent\" tabindex=\"0\">\n//     <div class=\"content\">\n//     <h2 class=\"content__heading\">Favorites Restaurant</h2>\n//     <div class=\"restaurants\" id=\"restaurants\">\n//     </div>\n//     </div>\n//   </main>`;\n//   },\n\n//   async afterRender() {\n//   // Fungsi ini akan dipanggil setelah render()\n//     const restaurants = await FavoriteRestaurantIdb.getAllRestaurant();\n//     const restaurantsContainer = document.querySelector('.restaurants');\n//     restaurants.forEach((restaurant) => {\n//       restaurantsContainer.innerHTML += createRestaurantItemTemplate(restaurant);\n//     });\n//   },\n// };\n\n// export default Favorites;\n"],"names":["i","button","closeMenu","drawer","content","this","_button","_closeMenu","_drawer","_content","_initialAppShell","DrawerInitiator","url","UrlParser","page","routes","render","innerHTML","afterRender","document","querySelector","addEventListener","event","preventDefault","focus","RestaurantSource","id","restaurant","createRestaurantDetailTemplate","LikeButtonPresenter","likeButtonContainer","favoriteRestaurant","FavoriteRestaurantIdb","name","city","pictureId","rating","description","view","FavoriteRestaurantSearchView","getTemplate","FavoriteRestaurantShowPresenter","FavoriteRestaurantSearchPresenter"],"sourceRoot":""}